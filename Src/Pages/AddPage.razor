@page "/add"
@inject IJSRuntime JSRuntime
<div class="flex flex-row" style="width: 100%; padding: 2%; justify-content:space-between; margin-bottom: 5%; align-items:center">
    <NavLink href="/" style=" top: 0.5rem; left:0.5rem;">
        <img width="20" height="20" src="@appImage.IconBack" alt="back" />
    </NavLink>
    <span style="font-weight:600; font-size:18px"> Tải lên video</span>
    <div/>
</div>
<div class="flex flex-col" style="width: 100%;  padding: 0 0.6rem 0 0.6rem" >
    <div class="flex flex-row space-x-1">
        <div class="flex flex-col" style="width: 50%; position:relative">
           
            <div id="idCreate" class="w-full rounded " style="height: 6rem; background-color: @appColor.gray40 "></div>
            <input @bind="idVideo" @onkeydown="IdVideoCheck"  type="text" class="rounded" style="padding: 0 0.2rem 0 0.2rem;width:100%; height:1.8rem; color: @appColor.gray; margin-top: 2%" placeholder="Nhập id video" />
        </div
        <div style="width:50%; height:100%">
            <textarea @bind="title" style="height: 8rem; padding: 0.3rem"
                class=" w-full text-sm  rounded  focus:ring-blue-500 focus:border-blue-500 " 
                placeholder="Nhập tiêu đề">
            </textarea>
        </div>
    </div>
    <div style="margin-top:8%;" />
    <div class="flex flex-row" style=" padding: 0.8rem 0 0.8rem 0;justify-content: space-between">
        <div class="flex flex-row space-x-2" style="align-items: center">
            <img style="object-fit: contain; width:20px; height:20px" src="@appImage.IconImage" />
            <span style="font-size:13px">Chọn ảnh bìa</span>
        </div>
        <div class="flex flex-row-reverse" style="width: 25%">
            <input @bind="image" type="text" style="color:@appColor.gray;width: 75%; padding: 0 2.5% 0 2.5%" placeholder="nhập url" />
        </div>
    </div>
    <div class="flex flex-row" style=" padding: 0.8rem 0 0.8rem 0;justify-content: space-between">
        <div class="flex flex-row space-x-2" style="align-items: center">
            <img style="object-fit: contain; width:20px; height:20px" src="@appImage.IconDocument" />
            <span style="font-size:13px">Giới thiệu</span>
        </div>
        <div class="flex flex-row-reverse" style="width: 25%">
            <img style="object-fit: contain; width: 15px; height: 15px" src="@appImage.IconRightGray" />
        </div>
    </div>
    <div style="padding: 0.8rem 0 0.8rem 0;">
        <textarea @bind="detail" style="height: 6rem; "
                  class=" w-full text-sm  rounded  focus:ring-blue-500 focus:border-blue-500 "
                  placeholder="Nhập nội dung">
         </textarea>
    </div>
    <div class="flex flex-row" style="width:100%">
        <div class="flex flex-col">
            <span>id</span>
            <input @bind="id" style="width: 20%; height: 2rem" type="text" placeholder="id" />
        </div>
        <div class="flex flex-col">
            <span>uid</span>
            <input @bind="uid" style="width: 20%; height: 2rem" type="text" placeholder="uid" />
        </div>
        <div class="flex flex-col">
            <span>time</span>
            <input @bind="time" style="width: 20%; height: 2rem" type="text" placeholder="time" />
       </div>
        <div class="flex flex-col">
            <span>like</span>
            <input @bind="like" style="width: 20%; height: 2rem" type="text" placeholder="like" />
        </div>
        <div class="flex flex-col">
            <span>commentid</span>
            <input @bind="comment" style="width: 20%; height: 2rem" type="text" placeholder="commentid" />
        </div>
        
    </div>
    <div class="flex flex-row" style="width:100%">
        <div class="flex flex-col">
            <span>view</span>
            <input @bind="view" style="width: 30%; height: 2rem" type="text" placeholder="view" />
        </div>
        <div class="flex flex-col">
            <span>avatar</span>
            <input @bind="avatar" style="width: 30%; height: 2rem" type="text" placeholder="avatar" />
        </div>
        <div class="flex flex-col">
            <span>actor</span>
            <input @bind="actor" style="width: 30%; height: 2rem" type="text" placeholder="actor" />
        </div>
      
    </div>

</div>
<div class="flex flex-row" style="width:100%; height: 2rem; padding: 0 0.6rem 0 0.6rem; position: absolute; bottom: 10%"> 
    <div style="width:50%; height:100%; padding: 0.2rem; background-color: @appColor.primary;border-radius: 0.3rem; display: flex; justify-content:center; align-items: center">
        <span style="color: white">Xóa nháp</span>
    </div>
    <div @onclick="AddVideo" style="width:50%; height:100%; padding: 0.2rem; border-style:solid; border-radius: 0.3rem; border-width:1px; border-color: @appColor.primary; display: flex; justify-content:center; align-items: center">
        <span style="color: @appColor.primary">Tạo</span>
    </div>
    @Alert
</div>
@code {
    private appColor appColor = new appColor();
    private appImage appImage = new appImage();

    private int id { get; set; }
    private string idVideo { get; set; } = "";
    private string title { get; set; } 
    private string image { get; set; } 
    private int uid { get; set; }
    private string time { get; set; } 
    private int like { get; set; } 
    private int comment { get; set; } 
    private int view { get; set; } 
    private string detail { get; set; } 


    private string avatar { get; set; }
    private string actor { get; set; }

    private string Alert  { get; set; }

    
    public async void IdVideoCheck()
    {
        if (idVideo.Length > 0)
        {
            await JSRuntime.InvokeVoidAsync("setIdCreate", idVideo);
            await JSRuntime.InvokeVoidAsync("CheckVideoIframAPI");
        }
    }

    private async void AddVideo()
    {
        var responseUser = await Database.AddUserAsync(new User()
            {
                id = uid,
                avatar = avatar,
                actor = actor
            });
        var responseVideo = await Database.AddVideoAsync(new Video()
            {
                id = id,
                videoUrl = idVideo,
                title = title,
                imageUrl = image,
                usersId = uid,
                time = time,
                like = like,
                commentVideo = comment,
                view = view,
                detail = detail,

            });
     
        if ((responseVideo > 0) && (responseUser > 0))
        {
            title = image = time = detail = idVideo = avatar = actor = "";
            id = like = uid = view = 0;
            this.StateHasChanged();
            Alert = "thanh cong";
        }
        else
        {
            Alert = "thất bại";
        }
    }

        protected override async Task OnInitializedAsync()
        {

       
           
     
        }

}
